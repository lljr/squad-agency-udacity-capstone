-*- mode: org; coding: utf-8; -*-

* Getting started
** Dependencies
In a virtual environment:

  - Flask ~python3 -m pip install flask~
  - Flask CORS ~python3 -m pip install flask-cors~
  - Flask Migrate ~python3 -m pip install Flask-Migrate~
  - Psycopg2 ~python3 -m pip install psycopg2-binary~
  - (JWT) Python-Jose ~python3 -m pip install python-jose~
  - Postgres installation -> https://www.postgresql.org/download/

  In one command  ~python3 -m pip install flask flask-cors Flask-Migrate psycopg2-binary python-jose~

** Getting started

*** Set up database
    1. Log in with ~sudo -u postgres -i~
    2. Create the databases with ~createdb agency~ and ~createdb agency_test~

*** Migrate the database
    After setting ~FLASK_APP=agency~ run ~flask db init~ then ~flask db migrate~
    and finally ~flask db upgrade~ to apply the migration.

*** Run tests
    After setting the database

    1. Assign user tokens as environment variables
       - ASSISTANT_TOKEN
       - DIRECTOR_TOKEN
       - PRODUCER_TOKEN
    2. Run test with ~python3 test_agency.py~



* API Documentation

** Endpoints

*** GET /actors
    Fetches a dictionary of movies.
    - Request Arguments: None
    - Result: A list of movies in JSON format.

**** Example
 #+begin_src shell
 curl http://127.0.0.1:5000/movies
 #+end_src


*** POST /actors

*** DELETE /actors/<int:actor_id>

*** PATCH /actors/<int:actor_id>

*** PATCH /movies/<int:movie_id>

*** GET /movies

*** GET /actors/<int:actor_id>/movies

*** POST /actors/<int:actor_id>/movies

*** DELETE /actors/<int:actor_id>/movies/<int:movie_id>

** Error Handling
   Error sare returned as JSON objects in the following format:
#+begin_src json
{
    "success" False,
    "error": 404,
    "message": "Not found"
}
#+end_src

The API will return four error types when requests fail
- 400: Bad Request
- 404: Not Found
- 422: Unprocessable
- 401: Unauthorized
- 405: Method Not Allowed
- 403: Permission Does Not Exist
- 500: Internal Server Error
